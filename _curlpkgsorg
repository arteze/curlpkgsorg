#!/bin/sh

echo $@

consalto(){
	echo ""
	if [[ "$2" == "ev" ]];then
		eval "$1"
	else
		echo "$1"
	fi
}
cantidad_lineas(){
	if [[ "$(printf "%s" "$1" | wc -w)" == "0" ]];then
		devuelve="0"
	else
		devuelve="$(($(printf "%s" "$1" | wc -l)+1))"
	fi
	echo "$devuelve"
}
seleccionar(){
	echo "$1" | head -n "$2" | tail -n 1
}
subcaracter(){
	printf "%s" "$1" | cut -c "$2"
}
cambiar_letras_por_numeros(){
	m="pqwertyuio"
	n="$1"
	for ((k=0;k<10;++k)); do
		p="s/$(subcaracter "$m" $(("$k"+1)))/$(printf "%s" "$k")/g"
		n="$(printf $n |sed "$p")"
	done
	printf "%s" "$n"
}
leer_y_cambiar(){
	c=""
	c2=""
	while [[ "$c2" != $'\n'  ]];do
		if [[ "$c2" != "" ]];then
			if [ "$c2" == $'\177' ]; then
				c="$(printf "%s" "$c" | sed "s/.$//")"
				printf "\b \b"
			else
				c3="$(cambiar_letras_por_numeros "$c2")"
				c="$c$c3"
				printf "$c3"
			fi
		fi
		read -s -rN 1 c2
	done
}
filtrar_distros(){
	echo "$1" | grep "$4" "$(seleccionar "$2" "$3").pkgs.org"
}

h="User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:55.0) Gecko/20100101 \
 Goanna/4.0 Firefox/55.0 Basilisk/20180202"
i="curl -s -H \"$h\" \"https://pkgs.org/search/?q=$1\""
a=$(eval $i)

j="$(echo "slackware debian" | tr " " "\n")"

if [[ "$a" == "" ]];then
	echo "Error de internet"
	exit
fi

err403="<title>Error 403: Forbidden</title>"
if [[ "$(echo $a | grep "$err403")" != "" ]];then
	echo "Error 403"
	exit
fi

b="$(echo "$a" | grep -Pi "http.+html" | \
grep -Po '"http.*"' | sed 's/["]//g' \
| grep -vi arm64 | grep -vi aarch64 | grep -vi i686 | grep -vi i586
)"

b2="$( filtrar_distros "$b" "$j" 1)"
b23="$(filtrar_distros "$b" "$j" 2 "-v")"

if [[ "$2" == "noslackware" && "$b23" != "" ]];then
	b="$b23"
fi

if [[ "$b23" == "" ]];then
	b32="$(echo "$b" | grep -o "/[.a-z0-9]*")"
	b4="$(seleccionar "$b32" 3)"
	b5="$(echo "$b" | grep "$b4")"
	echo $j
	echo "$(seleccionar "$j" 1).pkgs.org"
	echo "Elegido debian."
fi

if [[ "$b5" != "" ]];then
	b="$b5"
fi

b6="$(cantidad_lineas "$b")"

if [[ "$b6" == "0" ]];then
	echo "No hay para elegir."
elif [[ "$b6" == "1" ]];then
		d="$b"
else
	echo "$b" | grep -n ""
	c=""
	c2=""
	leer_y_cambiar
	d="$(seleccionar "$b" "$c")"
fi

consalto "URL elegida: $d"
d2="curl -s -H \"$h\" $d"
e=$(eval $d2)

f=$(echo "$e" | grep -Pi "td.*text-break.*http" | grep -Po 'http[^<]*' | tail -n 1)
consalto "Servidor oficial: "
echo "$f"

g=$(basename $f)

consalto "curl $f --output $g" ev

consalto "$g"
consalto "xdg-open $g" ev
