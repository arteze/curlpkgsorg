#!/bin/sh

mostrar_n(){
	if [[ "$2" == "ev" ]];then
		eval "$1"
	else
		printf "$1" && printf "\012"
	fi
}
mostrar(){
	printf "$1"
}
cantidad_lineas(){
	if [[ "$(printf "%s" "$1" | wc -w)" == "0" ]];then
		devuelve="0"
	else
		devuelve="$(($(printf "%s" "$1" | wc -l)+1))"
	fi
	mostrar "$devuelve"
}
seleccionar(){
	mostrar "$1" | head -n "$2" | tail -n 1
}
subcaracter(){
	mostrar "$1" | cut -c "$2"
}
cambiar_letras_por_numeros(){
	m="pqwertyuio"
	n="$1"
	for ((k=0;k<10;++k)); do
		p="s/$(subcaracter "$m" $(("$k"+1)))/$(printf "%s" "$k")/g"
		n="$(printf $n |sed "$p")"
	done
	printf "%s" "$n"
}
leer_y_cambiar(){
	c=""
	c2=""
	while [[ "$c2" != $'\n'  ]];do
		if [[ "$c2" != "" ]];then
			if [ "$c2" == $'\177' ]; then
				c="$(mostrar "$c" | sed "s/.$//")"
				mostrar "\b"
			else
				c3="$(cambiar_letras_por_numeros "$c2")"
				c="$c$c3"
				mostrar "$c3"
			fi
		fi
		read -s -rN 1 c2
	done
	mostrar "$c"
}
filtrar_distros(){
	mostrar_n "$1" | grep $2 $(seleccionar "$3" "$4").pkgs.org
}
priult(){
	mostrar_n "$1" | $2 -n 1 | cut -d "/" -f 3
}

mostrar_n "$@"

h="User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:55.0) Gecko/20100101 \
 Goanna/4.0 Firefox/55.0 Basilisk/20180202"
i="curl -L -H \"$h\" \"https://pkgs.org/search/?q=$1\""
a="$(eval "$i")"

j="$(mostrar "slackware debian" | tr " " "\n")"

if [[ "$a" == "" ]];then
	mostrar_n "Error de internet"
	exit
fi

err403="<title>Error 403: Forbidden</title>"
if [[ "$(mostrar_n "$a" | grep "$err403")" != "" ]];then
	mostrar_n "Error 403"
	exit
fi
err301="Moved Permanently"
if [[ "$(mostrar_n "$a" | grep "$err301")" != "" ]];then
	mostrar_n "Error 301"
	exit
fi

b="$(mostrar_n "$a" | grep -Pi "http.+html" | \
grep -Po '"http.*"' | sed 's/["]//g' \
| grep -vi arm64 | grep -vi aarch64 | grep -vi i686 | grep -vi i586
)"

b22="$(filtrar_distros "$b" "-v" "$j" 1 )"
b23="$(filtrar_distros "$b" "  " "$j" 1 )"

if [[ "$2" == "no$(seleccionar "$j" 1)" && "$b22" != "" ]];then
	b="$b22"
fi
if [[ "$2" == "$(seleccionar "$j" 1)" && "$b23" != "" ]];then
	b="$b23"
fi

if [[ "$(priult "$b" head)" == "$(priult "$b" tail)" ]];then
	b32="$(mostrar_n "$b" | grep -o "/[.a-z0-9]*")"
	b4="$(seleccionar "$b32" 3)"
	b5="$(seleccionar "$j" 1).pkgs.org"
	b52="$(mostrar "$b" | grep "$b5")"
fi

if [[ "$b52" != "" ]];then
	b="$b52"
fi

b6="$(cantidad_lineas "$b")"

if [[ "$b6" == "0" ]];then
	mostrar_n "No hay para elegir."
elif [[ "$b6" == "1" ]];then
		d="$b"
else
	mostrar_n "$b" | grep -n ""
	leer_y_cambiar # c3
	d="$(seleccionar "$b" "$c3")"
fi

mostrar_n "URL elegida: $d"
e="$(curl -H "$h" "$d")"

f="$(echo "$e" | grep -Pi "td.*text-break.*http" | \
grep -Po 'http[^<]*' | tail -n 1)"

f2="$(mostrar_n "$f" | sed "s/^https:\/\//http:\/\//g")"

mostrar_n "Servidor oficial: "
mostrar "$f2"

g=$(basename $f)

mostrar_n "curl -L $f2 --output $g" ev

mostrar_n "$g"
mostrar_n "xdg-open $g" ev
